version: '3.8'

services:
  api-gateway:
    build: ./services/api-gateway
    ports:
      - "8000:80"
    depends_on:
      - auth-service
      - task-service
      - time-service
      - group-service
      - report-service
    volumes:
      - ./services/api-gateway/config:/etc/nginx/conf.d
    networks:
      - app-network

  auth-service:
    build: ./services/auth-service
    ports:
      - "8001:8000"
    environment:
      - DATABASE_URL=postgresql://postgres:postgres@db:5432/auth_db
    depends_on:
      - db
    networks:
      - app-network

  task-service:
    build: ./services/task-service
    ports:
      - "8002:8000"
    environment:
      - DATABASE_URL=postgresql://postgres:postgres@db:5432/task_db
    depends_on:
      - db
    networks:
      - app-network

  time-service:
    build: ./services/time-service
    ports:
      - "8003:8000"
    environment:
      - DATABASE_URL=postgresql://postgres:postgres@db:5432/time_db
    depends_on:
      - db
    networks:
      - app-network

  group-service:
    build: ./services/group-service
    ports:
      - "8004:8000"
    environment:
      - DATABASE_URL=postgresql://postgres:postgres@db:5432/group_db
    depends_on:
      - db
    networks:
      - app-network

  report-service:
    build: ./services/report-service
    ports:
      - "8005:8000"
    environment:
      - DATABASE_URL=postgresql://postgres:postgres@db:5432/report_db
    depends_on:
      - db
    networks:
      - app-network

  line-bot-service:
    build: ./services/line-bot-service
    ports:
      - "8006:8000"
    environment:
      - LINE_CHANNEL_SECRET=your_line_channel_secret
      - LINE_CHANNEL_ACCESS_TOKEN=your_line_channel_access_token
    networks:
      - app-network

  frontend:
    build: ./services/frontend
    ports:
      - "80:80"
    depends_on:
      - api-gateway
    networks:
      - app-network

  db:
    image: postgres:13
    ports:
      - "5432:5432"
    environment:
      - POSTGRES_USER=postgres
      - POSTGRES_PASSWORD=postgres
      - POSTGRES_MULTIPLE_DATABASES=auth_db,task_db,time_db,group_db,report_db
    volumes:
      - postgres_data:/var/lib/postgresql/data
      - ./database/init.sql:/docker-entrypoint-initdb.d/init.sql
    networks:
      - app-network

networks:
  app-network:
    driver: bridge

volumes:
  postgres_data: 